#!/bin/bash

echo "ЁЯЫая╕П р╣Ар╕гр╕┤р╣Ир╕бр╕Хр╕┤р╕Фр╕Хр╕▒р╣Йр╕З Print Monitor..."

# ЁЯз▒ STEP 1: Clone р╣Вр╕Ыр╕гр╣Ар╕Ир╕Бр╕Хр╣Мр╕Ир╕▓р╕Б GitHub
read -p "ЁЯУж р╣Гр╕кр╣И URL GitHub Repository (HTTPS): " GIT_REPO
git clone "$GIT_REPO" print-monitor
cd print-monitor || { echo "тЭМ р╣Др╕бр╣Ир╕Юр╕Ър╣Вр╕Яр╕ер╣Ар╕Фр╕нр╕гр╣М print-monitor"; exit 1; }

# ЁЯз╛ STEP 2: р╕гр╕▒р╕Ър╕Др╣Ир╕▓р╕Ир╕▓р╕Бр╕Ьр╕╣р╣Йр╣Гр╕Кр╣Йр╣Ар╕Юр╕╖р╣Ир╕нр╕кр╕гр╣Йр╕▓р╕Зр╣Др╕Яр╕ер╣М .env
echo "ЁЯМР р╕Бр╕│р╕лр╕Щр╕Фр╕Др╣Ир╕▓р╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕нр╕Бр╕▒р╕Ъ CUPS Server"
read -p "ЁЯЦия╕П IP р╕лр╕гр╕╖р╕н URL р╕Вр╕нр╕З CUPS Server (р╣Ар╕Кр╣Ир╕Щ http://192.168.1.100:631): " cups_url
read -p "ЁЯМР PORT р╕Вр╕нр╕З Node.js р╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕гр╕▒р╕Щ (default 3000): " port

# р╕Цр╣Йр╕▓р╕вр╕▒р╕Зр╣Др╕бр╣Ир╕Юр╕┤р╕бр╕Юр╣М port р╣Гр╕лр╣Йр╣Гр╕Кр╣Й 3000
if [ -z "$port" ]; then
  port=3000
fi

# тЬНя╕П р╕кр╕гр╣Йр╕▓р╕Зр╣Др╕Яр╕ер╣М .env
cat <<EOF > .env
PORT=$port
CUPS_SERVER=$cups_url
EOF

echo "тЬЕ р╕кр╕гр╣Йр╕▓р╕Зр╣Др╕Яр╕ер╣М .env р╣Ар╕гр╕╡р╕вр╕Ър╕гр╣Йр╕нр╕в"

# ЁЯР│ STEP 3: Build Docker container
echo "тЪЩя╕П р╕кр╕гр╣Йр╕▓р╕З Docker image..."
docker build -t print-monitor .

# ЁЯПГ STEP 4: Run Container
echo "ЁЯЪА р╣Ар╕гр╕┤р╣Ир╕бр╕гр╕▒р╕Щ Print Monitor р╕Ър╕Щ port $port ..."
docker run -d --name print-monitor -p $port:$port --env-file .env print-monitor

echo "ЁЯОЙ р╕Хр╕┤р╕Фр╕Хр╕▒р╣Йр╕Зр╣Ар╕кр╕гр╣Зр╕Ир╕кр╕бр╕Ър╕╣р╕гр╕Ур╣М! р╣Ар╕Ыр╕┤р╕Фр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╕Чр╕╡р╣И http://localhost:$port/jobs"
